{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction UserFormComponent_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserFormComponent_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserFormComponent_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \"Please enter a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserFormComponent_For_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(role_r1);\n  }\n}\nfunction UserFormComponent_Conditional_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \"Role is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let UserFormComponent = /*#__PURE__*/(() => {\n  class UserFormComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.userSubmitted = new EventEmitter();\n      this.closeModal = new EventEmitter();\n      this.availableRoles = ['Admin', 'Editor', 'Viewer'];\n      this.userForm = this.fb.group({\n        name: ['', [Validators.required, Validators.minLength(2)]],\n        email: ['', [Validators.required, Validators.email]],\n        role: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      if (this.userForm.valid) {\n        const formData = this.userForm.value;\n        this.userSubmitted.emit(formData);\n        this.userForm.reset();\n      } else {\n        this.userForm.markAllAsTouched();\n      }\n    }\n    onClose() {\n      this.closeModal.emit();\n    }\n    static {\n      this.ɵfac = function UserFormComponent_Factory(t) {\n        return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserFormComponent,\n        selectors: [[\"app-user-form\"]],\n        outputs: {\n          userSubmitted: \"userSubmitted\",\n          closeModal: \"closeModal\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 29,\n        vars: 6,\n        consts: [[1, \"modal-content\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Enter name\", 1, \"form-control\"], [1, \"error\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"for\", \"role\"], [\"id\", \"role\", \"formControlName\", \"role\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\"], [1, \"form-actions\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", 3, \"disabled\"]],\n        template: function UserFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Add New User\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function UserFormComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n            i0.ɵɵtext(6, \"Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 4);\n            i0.ɵɵtemplate(8, UserFormComponent_Conditional_8_Template, 2, 0, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n            i0.ɵɵtext(11, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 7);\n            i0.ɵɵtemplate(13, UserFormComponent_Conditional_13_Template, 2, 0, \"div\", 5)(14, UserFormComponent_Conditional_14_Template, 2, 0, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"div\", 2)(16, \"label\", 8);\n            i0.ɵɵtext(17, \"Role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"select\", 9)(19, \"option\", 10);\n            i0.ɵɵtext(20, \"Select role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵrepeaterCreate(21, UserFormComponent_For_22_Template, 2, 2, \"option\", 11, i0.ɵɵrepeaterTrackByIdentity);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(23, UserFormComponent_Conditional_23_Template, 2, 0, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(24, \"div\", 12)(25, \"button\", 13);\n            i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_25_listener() {\n              return ctx.onClose();\n            });\n            i0.ɵɵtext(26, \"Cancel\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(27, \"button\", 14);\n            i0.ɵɵtext(28, \"Add User\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            let tmp_3_0;\n            let tmp_5_0;\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵconditional(8, ((tmp_1_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]) && ((tmp_1_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_1_0.touched) ? 8 : -1);\n            i0.ɵɵadvance(5);\n            i0.ɵɵconditional(13, ((tmp_2_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]) && ((tmp_2_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_2_0.touched) ? 13 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(14, ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"email\"]) && ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.touched) ? 14 : -1);\n            i0.ɵɵadvance(7);\n            i0.ɵɵrepeater(ctx.availableRoles);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(23, ((tmp_5_0 = ctx.userForm.get(\"role\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"required\"]) && ((tmp_5_0 = ctx.userForm.get(\"role\")) == null ? null : tmp_5_0.touched) ? 23 : -1);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n          }\n        },\n        dependencies: [CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".form-group[_ngcontent-%COMP%]{margin-bottom:16px}label[_ngcontent-%COMP%]{display:block;margin-bottom:8px;color:var(--secondary-color)}.error[_ngcontent-%COMP%]{color:red;font-size:14px;margin-top:4px}.form-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;gap:16px;margin-top:24px}.btn-secondary[_ngcontent-%COMP%]{background-color:#6c757d}\"]\n      });\n    }\n  }\n  return UserFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}