{"ast":null,"code":"import { CommonModule } from \"@angular/common\";\nimport { Chart } from \"chart.js/auto\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/user.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"chartCanvas\"];\nconst _forTrack0 = ($index, $item) => $item.id;\nconst UserDashboardComponent_Conditional_24_Defer_2_DepsFn = () => [import(\"../user-form/user-form.component\").then(m => m.UserFormComponent)];\nfunction UserDashboardComponent_For_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r2.role);\n  }\n}\nfunction UserDashboardComponent_Conditional_24_Defer_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-user-form\", 8);\n    i0.ɵɵlistener(\"userSubmitted\", function UserDashboardComponent_Conditional_24_Defer_1_Template_app_user_form_userSubmitted_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.onUserSubmitted($event));\n    })(\"closeModal\", function UserDashboardComponent_Conditional_24_Defer_1_Template_app_user_form_closeModal_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.closeUserForm());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserDashboardComponent_Conditional_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, UserDashboardComponent_Conditional_24_Defer_1_Template, 1, 0);\n    i0.ɵɵdefer(2, 1, UserDashboardComponent_Conditional_24_Defer_2_DepsFn);\n    i0.ɵɵdeferOnIdle();\n    i0.ɵɵelementEnd();\n  }\n}\nexport let UserDashboardComponent = /*#__PURE__*/(() => {\n  class UserDashboardComponent {\n    constructor(userService) {\n      this.userService = userService;\n      this.users$ = this.userService.users$;\n      this.showUserForm = false;\n      this.chart = null;\n    }\n    ngOnInit() {}\n    ngAfterViewInit() {\n      this.initChart();\n    }\n    ngOnDestroy() {\n      this.chartSubscription?.unsubscribe();\n      if (this.chart) {\n        this.chart.destroy();\n      }\n    }\n    initChart() {\n      if (!this.chartCanvas) return;\n      this.chart = new Chart(this.chartCanvas.nativeElement, {\n        type: \"pie\",\n        data: {\n          labels: [\"Admin\", \"Editor\", \"Viewer\"],\n          datasets: [{\n            data: [0, 0, 0],\n            backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n      this.chartSubscription = this.userService.getRoleDistribution().subscribe({\n        next: distribution => {\n          if (!this.chart) return;\n          this.chart.data.datasets[0].data = [distribution[\"Admin\"] || 0, distribution[\"Editor\"] || 0, distribution[\"Viewer\"] || 0];\n          this.chart.update();\n        },\n        error: error => {\n          console.error(\"Error updating chart:\", error);\n        }\n      });\n    }\n    openUserForm() {\n      this.showUserForm = true;\n    }\n    closeUserForm() {\n      this.showUserForm = false;\n    }\n    onUserSubmitted(user) {\n      this.userService.addUser(user);\n      this.closeUserForm();\n    }\n    static {\n      this.ɵfac = function UserDashboardComponent_Factory(t) {\n        return new (t || UserDashboardComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserDashboardComponent,\n        selectors: [[\"app-user-dashboard\"]],\n        viewQuery: function UserDashboardComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 25,\n        vars: 3,\n        consts: [[\"chartCanvas\", \"\"], [1, \"dashboard\"], [1, \"header\"], [1, \"btn\", 3, \"click\"], [1, \"content\"], [1, \"table-container\"], [1, \"chart-container\"], [1, \"modal\"], [3, \"userSubmitted\", \"closeModal\"]],\n        template: function UserDashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"h1\");\n            i0.ɵɵtext(3, \"User Dashboard\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function UserDashboardComponent_Template_button_click_4_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.openUserForm());\n            });\n            i0.ɵɵtext(5, \"Add User\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"table\")(9, \"thead\")(10, \"tr\")(11, \"th\");\n            i0.ɵɵtext(12, \"Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"th\");\n            i0.ɵɵtext(14, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"th\");\n            i0.ɵɵtext(16, \"Role\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(17, \"tbody\");\n            i0.ɵɵrepeaterCreate(18, UserDashboardComponent_For_19_Template, 7, 3, \"tr\", null, _forTrack0);\n            i0.ɵɵpipe(20, \"async\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(21, \"div\", 6);\n            i0.ɵɵelement(22, \"canvas\", null, 0);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(24, UserDashboardComponent_Conditional_24_Template, 4, 0, \"div\", 7);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(18);\n            i0.ɵɵrepeater(i0.ɵɵpipeBind1(20, 1, ctx.users$));\n            i0.ɵɵadvance(6);\n            i0.ɵɵconditional(24, ctx.showUserForm ? 24 : -1);\n          }\n        },\n        dependencies: [CommonModule, i2.AsyncPipe],\n        styles: [\".dashboard[_ngcontent-%COMP%]{padding:24px}.header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:24px}.content[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;gap:24px}.chart-container[_ngcontent-%COMP%]{height:400px}\"]\n      });\n    }\n  }\n  return UserDashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}